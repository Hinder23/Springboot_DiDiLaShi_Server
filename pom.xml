<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.springboot</groupId>
  <artifactId>Springboot_DiDiLaShi_Server</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>Springboot_DiDiLaShi_Server</name>
  <url>http://maven.apache.org</url>

  <!-- spring-boot-starter-parent:提供dependency managment,依赖管理。
  			引入以后，在申明其他dependency的时候就不需要version -->
  
  <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.4.1.RELEASE</version>
 </parent>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.verson>1.8</java.verson>
  </properties>

  <dependencies>
  		
  	<!-- spring-boot-starter-web:提供了mvc aop等等的依赖包 -->
    <dependency>  
          <groupId>org.springframework.boot</groupId>  
          <artifactId>spring-boot-starter-web</artifactId>  
      </dependency> 
      
    <!-- FastJson.jar -->       
      <dependency>  
          <groupId>com.alibaba</groupId>  
          <artifactId>fastjson</artifactId>
          <version>1.2.15</version> 
      </dependency>
 <!-- Hibenate整合 -->      
    <!-- 下面两个引入为了操作数据库 -->
       <!-- JPA依赖 --> 
         <dependency>
              <groupId>org.springframework.boot</groupId>
              <artifactId>spring-boot-starter-data-jpa</artifactId>
          </dependency>		
            
       <!-- MySQL依赖 -->                	
          <dependency>
              <groupId>mysql</groupId>
              <artifactId>mysql-connector-java</artifactId>
          </dependency>
  <!-- mybatis整合 -->                       
          <!--  spring-boot mybatis依赖：        
           请不要使用1.0.0版本，因为还不支持拦截器插件，1.1.1 是博主写帖子时候的版本，大家使用最新版本即可-->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>1.1.1</version>
        </dependency>
                  
    <!--    MyBatis提供了拦截器接口，我们可以实现自己的拦截器，将其作为一个plugin装入到SqlSessionFactory中。     
       Github上有位开发者写了一个分页插件，我觉得使用起来还可以，挺方便的。
       Github项目地址： https://github.com/pagehelper/Mybatis-PageHelper
     -->  
    <dependency>
        <groupId>com.github.pagehelper</groupId>
        <artifactId>pagehelper</artifactId>
        <version>4.1.0</version>
    </dependency>
              
  </dependencies>
  
 <build>  
        <plugins>  
        
            <plugin>  
                <groupId>org.springframework.boot</groupId>  
                <artifactId>spring-boot-maven-plugin</artifactId>  
                <dependencies>  
                    <!-- spring热部署 -->  
                    <dependency>  
                        <groupId>org.springframework</groupId>  
                        <artifactId>springloaded</artifactId>  
                        <version>1.2.6.RELEASE</version>  
                    </dependency>  
                </dependencies>  
            </plugin>  
            
        </plugins>  
    </build>  
</project>
